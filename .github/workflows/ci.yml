name: CI

on: [push]

jobs:
  formatting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Lint (default features)
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets
      - name: Lint (no features)
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --no-default-features

  test_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build:
          # Test a default build with all features against stable and beta,
          # and a smaller musl build without any features that require dynamic
          # linking; we use this build for the static linux binary build on
          # releases.
          - target: x86_64-unknown-linux-gnu
            flags:
            rust: stable
          - target: x86_64-unknown-linux-gnu
            flags:
            rust: beta
          - target: x86_64-unknown-linux-musl
            flags: --no-default-features --features terminology
            rust: stable
    steps:
      - uses: actions/checkout@v1
      # Install ansi2html for tests
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install ansi2html for tests
        run: pip install ansi2html
      # Install musl tools for musl target
      - name: Install musl tools
        run: sudo apt-get install musl-tools
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.build.rust }}
          override: true
          target: ${{ matrix.build.target }}
      # Test
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.build.target }} ${{ matrix.build.flags }}
      - name: Format sample
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --target ${{ matrix.build.target }} ${{ matrix.build.flags }} -- sample/common-mark.md

  test_macos:
    runs-on: macOS-latest
    steps:
      # Test code
      - uses: actions/checkout@v1
      # Install ansi2html for tests
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install ansi2html for tests
        run: pip install ansi2html
      # Setup rust version
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      # Test
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features iterm2,remote_resources
      - name: Format sample
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --no-default-features --features iterm2,remote_resources -- sample/common-mark.md

  test_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      # Setup rust version
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target:  x86_64-pc-windows-msvc
      # Test
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target x86_64-pc-windows-msvc --no-default-features
      - name: Format sample
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --target x86_64-pc-windows-msvc --no-default-features -- sample/common-mark.md
