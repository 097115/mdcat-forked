name: CI

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy
      - name: rustfmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, x86_64-apple-darwin]
        rust: [stable, beta]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            flags: --no-default-features
          - target: x86_64-apple-darwin
            os: macOS-latest
        exclude:
          - target: x86_64-unknown-linux-musl
            rust: beta
          - target: x86_64-apple-darwin
            rust: beta
    steps:
      - uses: actions/checkout@v1
      # Install ansi2html for tests
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install ansi2html for tests
        run: pip install ansi2html
      # Install musl tools for musl target
      - name: Install musl tools
        run: sudo apt-get install musl-tools
        if: "contains(matrix.target, 'musl')"
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.target }}
      # Test
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }} ${{ matrix.flags }}
      - name: Format sample
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --target ${{ matrix.target }} ${{ matrix.flags }} -- sample/common-mark.md

  test_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      # Setup rust version
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target:  x86_64-pc-windows-msvc
      # Test
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target x86_64-pc-windows-msvc
      - name: Format sample
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --target x86_64-pc-windows-msvc -- sample/common-mark.md
